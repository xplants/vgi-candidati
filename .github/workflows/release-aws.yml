name: Release AWS
on:
  workflow_dispatch:
    inputs:
      stage:
        description: "Specify the stage to deploy"
        required: true
        default: "preprod"

jobs:
  buildAndDeploy:
    name: BuildAndDeploy
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: ${{ github.event.inputs.stage }}
    env:
      ENV: ${{ github.event.inputs.stage }}
      APP_NAME: vgicandidati
      S3_BUCKET_NAME: ${{ github.event.inputs.stage }}-pallino-vgicandidati
      S3_FILE_NAME: ${{ github.event.inputs.stage }}-vgicandidati-${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"
          cache: "maven"

      - name: Build with Maven
        run: mvn -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml -B package --file pom.xml 
        env:
          USER_NAME: ${{ secrets.USER_NAME }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      
      - name: Configure prod AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-1
  
      - name: AWS Deploy push
        run: |
            aws deploy push \
            --application-name ${{ env.ENV }}-${{ env.APP_NAME }} \
            --description "This is a revision for the ${{ env.ENV }}-${{ env.APP_NAME }}-${{ github.sha }}" \
            --s3-location s3://${{ env.S3_BUCKET_NAME }}/${{ env.S3_FILE_NAME }}.zip \
            --source .
  
      - name: AWS Create Deployment
        run: |
            aws deploy create-deployment \
             --application-name ${{ env.ENV }}-${{ env.APP_NAME }} \
             --deployment-config-name CodeDeployDefault.OneAtATime \
             --deployment-group-name ${{ env.ENV }}-${{ env.APP_NAME }}-DeploymentGroup \
             --file-exists-behavior OVERWRITE \
             --s3-location bucket=${{ env.S3_BUCKET_NAME }},key=${{ env.S3_FILE_NAME }}.zip,bundleType=zip \
  